# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: false
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/tempfile/all/tempfile.rbi
#
# tempfile-0.3.1

class Tempfile < Anonymous_Delegator_4
  def _close; end
  def close!; end
  def close(unlink_now = nil); end
  def delete; end
  def finalizer_manager; end
  def initialize(basename = nil, tmpdir = nil, mode: nil, **options); end
  def initialize_clone(other); end
  def initialize_copy_iv(other); end
  def initialize_dup(other); end
  def inspect; end
  def length; end
  def mode; end
  def open; end
  def opts; end
  def path; end
  def self.create(basename = nil, tmpdir = nil, mode: nil, anonymous: nil, **options, &block); end
  def self.create_anonymous(basename = nil, tmpdir = nil, mode: nil, **options, &block); end
  def self.create_with_filename(basename = nil, tmpdir = nil, mode: nil, **options); end
  def self.open(*args, **kw); end
  def size; end
  def to_s; end
  def unlink; end
  def unlinked; end
end
class Tempfile::FinalizerManager
  def call(object_id); end
  def initialize(path); end
  def register(obj, file); end
  def unlinked; end
  def unlinked=(arg0); end
end
