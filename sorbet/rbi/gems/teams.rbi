# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/teams/all/teams.rbi
#
# teams-1.11.0

module Teams
  def self.all(*args, **, &blk); end
  def self.bust_caches!(*args, **, &blk); end
  def self.find(*args, **, &blk); end
  def self.for_directory(*args, **, &blk); end
  def self.tag_value_for(*args, **, &blk); end
  def self.validation_errors(*args, **, &blk); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
class Teams::Plugin
  def initialize(*args, **, &blk); end
  def self.all_plugins(&blk); end
  def self.for(*args, **, &blk); end
  def self.inherited(arg0, &blk); end
  def self.missing_key_error_message(*args, **, &blk); end
  def self.new(*args, **, &blk); end
  def self.register_team(*args, **, &blk); end
  def self.registry(*args, **, &blk); end
  def self.validation_errors(*args, **, &blk); end
  extend T::Helpers
  extend T::Private::Abstract::Hooks
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
module Teams::Plugins
end
class Teams::Plugins::Identity < Teams::Plugin
  def identity(*args, **, &blk); end
  def self.validation_errors(*args, **, &blk); end
  extend T::Helpers
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
class Teams::Plugins::Identity::IdentityStruct < Struct
  def name; end
  def name=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Teams::IncorrectPublicApiUsageError < StandardError
end
class Teams::Team
  def ==(*args, **, &blk); end
  def config_yml(*args, **, &blk); end
  def eql?(*args, **, &blk); end
  def hash(*args, **, &blk); end
  def initialize(*args, **, &blk); end
  def name(*args, **, &blk); end
  def raw_hash(*args, **, &blk); end
  def self.from_hash(*args, **, &blk); end
  def self.from_yml(*args, **, &blk); end
  def to_tag(*args, **, &blk); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
